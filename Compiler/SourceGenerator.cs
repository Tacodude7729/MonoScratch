using System.Text;
using System;

namespace MonoScratch.Compiler {

    public class SourceGenerator {

        public StringBuilder Builder;
        public int Indentation = 0;

        public SourceGenerator() {
            Builder = new StringBuilder();

            Builder.Append($"//\n// Code generated by MonoScratch v0.1\n// Generated at {DateTime.Now}\n// MonoScratch by Tacodude7729\n//\n\n");
            AppendLine("namespace MonoScratch.Project;");
            AppendLine();
            AppendLine("using MonoScratch.Runtime;");
            AppendLine("using System;");
            AppendLine("using System.Collections.Generic;");
            AppendLine();
        }

        public override string ToString() {
            return Builder.ToString();
        }

        public void PushIndent() {
            ++Indentation;
        }

        public void PushBlock() {
            AppendIndentation();
            Builder.Append("{\n");
            PushIndent();
        }

        public void PopIndent() {
            --Indentation;
        }

        public void PopBlock() {
            PopIndent();
            AppendIndentation();
            Builder.Append("}\n");
        }

        public void AppendLine(string val = "") {
            AppendIndentation();
            Builder.Append(val);
            Builder.Append("\n");
        }

        public void AppendIndentation() {
            for (int i = 0; i < Indentation; i++) {
                Builder.Append("    ");
            }
        }

        public static string StringValue(string val) {
            return $"\"{val.Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("\n", "\\n").Replace("\t", "\\t")}\"";
        }
    }
}